/**
 * #.# Common SCSS
 *
 * Can include things like variables and mixins
 * that are used across the project.
*/

// Colors.
$black: rgb(41, 41, 41);
$white: #f4f4f4;
$gray: #dedede;
$green: #bada55;
$red: orangered;


// Hugo's new WordPress shades of gray
// from http://codepen.io/hugobaeta/pen/grJjVp
$black: #000;
$dark-gray-900: #191e23;
$dark-gray-800: #23282d;
$dark-gray-700: #32373c;
$dark-gray-600: #40464d;
$dark-gray-500: #555d66;    // use this most of the time for dark items
$dark-gray-400: #606a73;
$dark-gray-300: #6c7781;
$dark-gray-200: #7e8993;
$dark-gray-100: #8f98a1;
$light-gray-900: #a2aab2;
$light-gray-800: #b5bcc2;
$light-gray-700: #ccd0d4;
$light-gray-600: #d7dade;
$light-gray-500: #e2e4e7;   // good for "grayed" items and borders
$light-gray-400: #e8eaeb;
$light-gray-300: #edeff0;
$light-gray-200: #f3f4f5;
$light-gray-100: #f8f9f9;
$white: #fff;

// Additional colors
// some from https://make.wordpress.org/design/handbook/foundations/colors/
$blue-wordpress-700: #00669b;
$blue-wordpress: #0073aa;
$blue-dark-900: #0071a1;

$blue-medium-900: #006589;
$blue-medium-800: #00739C;
$blue-medium-700: #007FAC;
$blue-medium-600: #008DBE;
$blue-medium-500: #00a0d2;
$blue-medium-400: #33B3DB;
$blue-medium-300: #66C6E4;
$blue-medium-200: #BFE7F3;
$blue-medium-100: #E5F5FA;
$blue-medium-highlight: #b3e7fe;

// Alert colors
$alert-yellow: #f0b849;
$alert-red: #d94f4f;
$alert-green: #4ab866;




/**
 * Often re-used variables
 */

// Fonts & basics
$default-font: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif;
$default-font-size: 13px;
$default-line-height: 1.4;
$editor-font: "Noto Serif", serif;
$editor-html-font: Menlo, Consolas, monaco, monospace;
$editor-font-size: 16px;
$text-editor-font-size: 14px;
$editor-line-height: 1.8;
$big-font-size: 18px;
$mobile-text-min-font-size: 16px;	// Any font size below 16px will cause Mobile Safari to "zoom in"

// Widths, heights & dimensions
$item-spacing: 10px;
$panel-padding: 16px;
$header-height: 56px;
$panel-header-height: 50px;
$admin-bar-height: 32px;
$admin-bar-height-big: 46px;
$admin-sidebar-width: 160px;
$admin-sidebar-width-big: 190px;
$admin-sidebar-width-collapsed: 36px;

// Visuals
$shadow-popover: 0px 3px 20px rgba( $dark-gray-900, .1 ), 0px 1px 3px rgba( $dark-gray-900, .1 );
$shadow-toolbar: 0px 2px 10px rgba( $dark-gray-900, .1 ), 0px 0px 2px rgba( $dark-gray-900, .1 );

// Editor
$text-editor-max-width: 760px;
$visual-editor-max-width: 636px;
$block-controls-height: 36px;
$icon-button-size: 36px;
$icon-button-size-small: 24px;
$inserter-tabs-height: 36px;
$block-toolbar-height: 37px;
$sidebar-width: 280px;

// Blocks
$block-padding: 14px;
$block-mover-margin: 18px;
$block-spacing: 4px;
// old $block-mover-padding-visible: 32px;
$block-mover-padding-visible: $icon-button-size-small + $icon-button-size-small;


// Buttons & UI Widgets
$button-style__radius-roundrect: 4px;
$button-style__radius-round: 50%;




/**
 * Admin Color Scheme Overrides
 */

// All color schemes, body.admin-color ...
// -fresh (default, needs no overriding)
// -light (needs no overriding)
// -blue
// -coffee
// -ectoplasm
// -midnight
// -ocean
// -sunrise

// List of Gutenberg elements that need to be overridden
// - primary buttons (parent bleeds in)
// - switches
// - tab indicators

// List of spot colors (eyedropped from the primary button)
$scheme-fresh__spot-color: #0083b8;
$scheme-blue__spot-color: #e1a84b;
$scheme-coffee__spot-color: #c6a488;
$scheme-ectoplasm__spot-color: #a0b748;
$scheme-midnight__spot-color: #e34e46;
$scheme-ocean__spot-color: #9bb99f;
$scheme-sunrise__spot-color: #de823f;

// Color override mixin
@mixin admin-scheme-color-overrides( $scheme: fresh, $spot-color: $scheme-fresh__spot-color ) {
	body.admin-color-#{ ( $scheme ) } {
		// Tab indicators
		.edit-post-sidebar__panel-tab.is-active,
		.editor-inserter__tab.is-active {
			border-bottom-color: $spot-color;
		}

		// Switch
		.components-form-toggle.is-checked {
			.components-form-toggle__track {
				background-color: $spot-color;
				border-color: $spot-color;
			}

			.components-form-toggle__thumb {
				background-color: $spot-color;
			}

			&:before {
				background-color: $spot-color;
				border-color: $spot-color;
			}
		}

		// Saving state indicators
		.editor-post-publish-button.is-saving,
		.editor-post-publish-button.is-saving:disabled {
			// Yes, these need to be !important because they !important upstream too ¯\_(ツ)_/¯
			border-color: darken( $spot-color, 10 ) darken( $spot-color, 20 ) darken( $spot-color, 20 ) !important;
			box-shadow: 0 1px 0 darken( $spot-color, 20 ) !important;
			text-shadow: 0 -1px 1px darken( $spot-color, 20 ), 1px 0 1px darken( $spot-color, 20 ), 0 1px 1px darken( $spot-color, 20 ), -1px 0 1px darken( $spot-color, 20 ) !important;

			&:before {
				background-image: repeating-linear-gradient( -45deg, darken( $spot-color, 20 ), darken( $spot-color, 20 ) 11px, darken( $spot-color, 10 ) 10px, darken( $spot-color, 10 ) 20px );
			}
		}
	}
}

@mixin animate_fade {
	animation: animate_fade 0.1s ease-out;
	animation-fill-mode: forwards;
}

@mixin move_background {
	background-size: 28px 28px;
	animation: move_background .5s linear infinite;
}

@mixin loading_fade {
	animation: loading_fade 1.6s ease-in-out infinite;
}

@mixin slide_in_right {
	transform: translateX(+100%);
	animation: slide_in_right 0.1s forwards;
}


// Most used breakpoints
$break-huge: 1440px;
$break-wide: 1280px;
$break-large: 960px;	// admin sidebar auto folds
$break-medium: 782px;	// adminbar goes big
$break-small: 600px;
$break-mobile: 480px;


@mixin break-huge() {
	@media ( min-width: #{ ( $break-huge ) } ) {
		@content;
	}
}

@mixin break-wide() {
	@media ( min-width: #{ ( $break-wide ) } ) {
		@content;
	}
}

@mixin break-large() {
	@media ( min-width: #{ ( $break-large ) } ) {
		@content;
	}
}

@mixin break-medium() {
	@media ( min-width: #{ ( $break-medium ) } ) {
		@content;
	}
}

@mixin break-small() {
	@media ( min-width: #{ ( $break-small ) } ) {
		@content;
	}
}

@mixin break-mobile() {
	@media ( min-width: #{ ( $break-mobile ) } ) {
		@content;
	}
}

/**
 * Long content fade mixin
 *
 * Creates a fading overlay to signify that the content is longer
 * than the space allows.
 */

@mixin long-content-fade( $direction: right, $size: 20%, $color: #fff, $edge: 0px, $z-index: false) {
	content: '';
	display: block;
	position: absolute;
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-khtml-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
	pointer-events: none;

	@if $z-index {
		z-index: $z-index;
	}

	@if $direction == 'bottom' {
		background: linear-gradient( to top, rgba( $color, 0 ), $color 90% );
		left: $edge;
		right: $edge;
		top: $edge;
		bottom: calc(100% - $size);
		width: auto;
	}

	@if $direction == 'top' {
		background: linear-gradient( to bottom, rgba( $color, 0 ), $color 90% );
		top: calc(100% - $size);
		left: $edge;
		right: $edge;
		bottom: $edge;
		width: auto;
	}

	@if $direction == 'left' {
		background: linear-gradient( to left, rgba( $color, 0 ), $color 90% );
		top: $edge;
		left: $edge;
		bottom: $edge;
		right: auto;
		width: $size;
		height: auto;
	}

	@if $direction == 'right' {
		background: linear-gradient( to right, rgba( $color, 0 ), $color 90% );
		top: $edge;
		bottom: $edge;
		right: $edge;
		left: auto;
		width: $size;
		height: auto;
	}
}

/**
 * Editor Width mixin
 *
 * This mixin seeks to take the vinegar out of the responsive alignments in the editor.
 */

@mixin editor-width( $width ) {
	@media ( min-width: #{ ( $width ) } ) {
		@content;
	}
}

$visual-editor-max-width-padding: $visual-editor-max-width + $block-mover-padding-visible + $block-mover-padding-visible;
$float-margin: calc( 50% - #{ $visual-editor-max-width-padding / 2 } );

/**
 * Button states and focus styles
 */

@mixin button-style__disabled {
	opacity: 0.6;
	cursor: default;
}

@mixin button-style__hover {
	color: $dark-gray-900;
	box-shadow: inset 0 0 0 1px $light-gray-500, inset 0 0 0 2px $white, 0 1px 1px rgba( $dark-gray-900, .2 );
}

@mixin button-style__active() {
	outline: none;
	color: $dark-gray-900;
	box-shadow: inset 0 0 0 1px $light-gray-700, inset 0 0 0 2px $white;
}

@mixin button-style__focus-active() {
	outline: none;
	color: $dark-gray-900;
	box-shadow: inset 0 0 0 1px $dark-gray-300, inset 0 0 0 2px $white;
}

@mixin tab-style__focus-active() {
	outline: none;
	color: $dark-gray-900;
	box-shadow: inset 0 0 0 1px $dark-gray-300;
}

@mixin input-style__focus-active() {
	outline: none;
	color: $dark-gray-900;
	box-shadow: 0 0 0 1px $dark-gray-300;
}

/**
 * Applies editor left position to the selector passed as argument
 */
@mixin editor-left( $selector ) {
	.sticky-menu #{$selector} {	/* Sticky is when on smaller breakpoints, nav menu is manually opened */
		@include break-medium() {
			left: $admin-sidebar-width;
		}
	}

	.auto-fold #{$selector} {		/* Auto fold is when on smaller breakpoints, nav menu auto colllapses */
		@include break-medium() {
			left: $admin-sidebar-width-collapsed;
		}

		@include break-large() {
			left: $admin-sidebar-width;
		}
	}

	/* Sidebar manually collapsed */
	.folded #{$selector} {
		left: 0;

		@include break-medium() {
			left: $admin-sidebar-width-collapsed;
		}
	}

	/* Mobile menu opened */
	@media ( max-width: #{ ( $break-medium ) } ) {
		.auto-fold .wp-responsive-open #{$selector} {
			left: $admin-sidebar-width-big;
		}
	}

	/* In small screens with resposive menu expanded there is small white space */
	@media ( max-width: #{ ( $break-small ) } ) {
		.auto-fold .wp-responsive-open #{$selector} {
			margin-left: -18px;
		}
	}
}

/**
 * Applies editor right position to the selector passed as argument
 */
 @mixin editor-right( $selector ) {
	#{ $selector } {
		right: 0;
	}

	.edit-post-layout.is-sidebar-opened #{ $selector } {
		right: $sidebar-width;
	}
}




// Stores a list of z-index values in a central location.  For clarity, when a
// specific value is needed, add a comment explaining why (what other rules the
// value is designed to work with).

$z-layers: (
	'.editor-block-switcher__arrow': 1,
	'.editor-block-list__block:before': -1,
	'.editor-block-list__block .wp-block-more:before': -1,
	'.editor-block-list__block {core/image aligned left or right}': 20,
	'.freeform-toolbar': 10,
	'.editor-warning': 1,
	'.components-form-toggle__input': 1,
	'.editor-format-list__menu': 1,
	'.editor-inserter__tabs': 1,
	'.editor-inserter__tab.is-active': 1,
	'.components-panel__header': 1,
	'.editor-meta-boxes-area.is-loading:before': 1,
	'.editor-meta-boxes-area .spinner': 2,
	'.blocks-format-toolbar__link-modal': 2,
	'.editor-block-contextual-toolbar': 2,
	'.editor-block-switcher__menu': 2,
	'.components-popover__close': 2,
	'.editor-block-mover': 1,
	'.blocks-gallery-item__inline-menu': 20,
	'.editor-block-settings-menu__popover': 20, // Below the header
	'.edit-post-header': 30,
	'.wp-block-image__resize-handlers': 1, // Resize handlers above sibling inserter

	// Show drop zone above most standard content, but below any overlays
	'.components-drop-zone': 100,
	'.components-drop-zone__content': 110,

	// Show sidebar above wp-admin navigation bar for mobile viewports:
	// #wpadminbar { z-index: 99999 }
	'.edit-post-sidebar': 100000,
	'.edit-post-layout .edit-post-post-publish-panel': 100001,

	// Show notices below expanded wp-admin submenus:
	// #adminmenuwrap { z-index: 9990 }
	'.components-notice-list': 9989,

	// Show popovers above wp-admin menus and submenus and sidebar:
	// #adminmenuwrap { z-index: 9990 }
	'.components-popover': 1000000,
	'.components-autocomplete__results': 1000000,
	'.blocks-url-input__suggestions': 9999,
);

@function z-index( $key ) {
	@if map-has-key( $z-layers, $key ) {
		@return map-get( $z-layers, $key );
	}

	@error "Error: Specified z-index `#{$key}` does not exist in the mapping";
}





